#!/bin/sh

set -e

BACKUP_DEST_FOLDER=${BACKUP_DEST_FOLDER:-/var/tmp/}
BACKUP_DELETE_LOCAL_COPY=${BACKUP_DELETE_LOCAL_COPY:-true}

BACKUP_AWS_KEY=${BACKUP_AWS_KEY:-}
BACKUP_AWS_SECRET=${BACKUP_AWS_SECRET:-}
BACKUP_AWS_S3_PATH=${BACKUP_AWS_S3_PATH:-}

if [ -n "${HEALTHCHECK_START_URL}" ]; then
  curl --retry 3 "${HEALTHCHECK_START_URL}"
fi

# Backup MYSQL DB
if [ -n "${MYSQL_HOST}" ]; then
    # Make the mysqldump
    now=$(date +"%s_%Y-%m-%d")
    BACKUP_NAME="${BACKUP_DEST_FOLDER}${now}_mysqldump.sql.gz"
    /usr/bin/mysqldump --opt -h "${MYSQL_HOST}" -u "${MYSQL_USER}" -p"${MYSQL_PASSWORD}" --all-databases | gzip > "${BACKUP_NAME}"

    # upload to S3
    s3cmd \
        --access_key="${BACKUP_AWS_KEY:?'BACKUP_AWS_KEY is required'}" \
        --secret_key="${BACKUP_AWS_SECRET:?'BACKUP_AWS_SECRET is required'}" \
        put "${BACKUP_NAME}" \
        "${BACKUP_AWS_S3_PATH}"

    # remove the backup locally
    if [ -n "${BACKUP_DELETE_LOCAL_COPY}" ]; then
      rm "${BACKUP_NAME}"
    fi
fi


# Backup local folder
if [ -n "${SYNC_FOLDER}" ]; then
    s3cmd \
        --access_key="${BACKUP_AWS_KEY:?'BACKUP_AWS_KEY is required'}" \
        --secret_key="${BACKUP_AWS_SECRET:?'BACKUP_AWS_SECRET is required'}" \
        --delete-removed \
        sync -r "${SYNC_FOLDER}" \
        "${BACKUP_AWS_S3_PATH}"
fi

if [ -n "${HEALTHCHECK_END_URL}" ]; then
  curl --retry 3 "${HEALTHCHECK_END_URL}"
fi